#pragma comment(linker, "/STACK:1024000000,1024000000")
#include <cstdio>
#include <iostream>
#include <cstdlib>
#include <vector>
#include <cmath>
#include <map>
#include <stack>
#include <queue>
#include <algorithm>
#include <cstring>
#include <string>
#include <ctime>
#include <set>
#include <functional>
using namespace std;
#define UP(i,x,y) for(int i=x;i<=y;i++)
#define DOWN(i,x,y) for(int i=x;i>=y;i--)
#define MEM(a,x) memset(a,x,sizeof(a))
#define gcd(a,b) __gcd(a,b)
#define Read(a) scanf("%d",&a)
#define ll long long

#define MOD 1000000007
#define INF 0x3f3f3f3f
#define EXP 1e-8
#define lowbit(x) (x&-x)
int n,m;
const int N = 1005;
int mp[N][N];
int vis[N],used[N][N];
int pre[N],ma[N][N],low[N];
int flag;
int Prim(int x)
{
     int ans=0;
     int t=n;
    memset(pre,-1,sizeof(pre));
    pre[x] = -1;
    memset(ma,0,sizeof(ma));
    for(int i = 1; i <= n; i++)
    {
        vis[i] = 0;
        low[i] = INF;
    }
    low[1] = 0;
    //vis[s] = 1;
    for(int i = 1; i <= n; i++)
    {
        int temp = INF,tp=-1;
        for(int j = 1; j <= n; j++)
            if(!vis[j]&&temp>low[j])
            {
                tp = j;
                temp=low[j];
            }
        if(tp==-1) continue;
        int k = tp;
        int v = pre[k];
        if(v!=-1)
        {
            used[k][v]=used[v][k]=2;
            for(int j = 1; j <= n; j++)
                if(vis[j])
                    ma[j][k] = max(ma[j][v],mp[v][k]);
        }
        vis[k] = 1;
        ans+=low[k];
        for(int j = 1; j <= n; j++)
            if(!vis[j]&&low[j]>mp[k][j])
            {
                low[j] = mp[k][j];
                pre[j] = k;
            }
    }
    return ans;
}
int Next_Prim(int x)
{
    int res=x,ans=INF;
    for(int i = 1; i <= n; i++)
            for(int j = 1; j <= n; j++)
            if(used[i][j]==1&&mp[i][j]!=INF&&ma[i][j]!=INF)
            {
                if(res+mp[i][j]-ma[i][j] < ans)
                        ans = res+mp[i][j]-ma[i][j];
            }
    return ans;
}
int main()
{
        int t;
        Read(t);
        while(t--)
        {

                MEM(ma,0);
                MEM(used,0);
                Read(n);
                Read(m);
                UP(i,0,n) UP(j,0,n) mp[i][j]=INF;
                UP(i,1,m)
                {
                        int u,v,w;
                        Read(u);Read(v);Read(w);
                        mp[u][v]=w;mp[v][u]=w;
                        used[u][v]=1;used[v][u]=1;
                }
                int ans=Prim(1);
                int next=Next_Prim(ans);
                printf("%d %d\n",ans,next);
        }
        return 0;
}
/*
2
5 8
1 3 75
3 4 51
2 4 19
3 2 95
2 5 42
5 4 31
1 2 9
3 5 66

9 14
1 2 4
1 8 8
2 8 11
3 2 8
8 9 7
8 7 1
7 9 6
9 3 2
3 4 7
3 6 4
7 6 2
4 6 14
4 5 9
5 6 10
*/
