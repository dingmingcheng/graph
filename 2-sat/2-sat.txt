#include <iostream>
#include<cstdio>
#include<algorithm>
#include<string>
#include<cstring>
#include<vector>
#define maxn 8005
using namespace std;
struct TwoSAT{
    int n;
    vector<int> G[maxn*2];
    bool mark[maxn*2];
    int S[maxn*2],c;
    bool dfs(int x){
        if(mark[x^1])return false;
        if(mark[x])
        return true;
        mark[x]=true;
        S[c++]=x;
        for(int i=0;i<G[x].size();i++)
        if(!dfs(G[x][i]))return false;
        return true;
    }
    void init(int n){
        this->n=n;
        for(int i=0;i<n*2;i++)
        G[i].clear();
        memset(mark,0,sizeof(mark));
    }
    void add_clause(int x,int y){
        //G[x].push_back(y^1);
        //G[y].push_back(x^1);
        //printf("%d %d**%d %d\n",x,y,x^1,y^1);
        G[x^1].push_back(y);
        G[y^1].push_back(x);
    }
    bool solve(){
        for(int i=0;i<n*2;i+=2)
        {
            if(!mark[i]&&!mark[i+1])
            {
                c=0;
                if(!dfs(i))
                {
                        while(c>0)mark[S[--c]]=false;
                        if(!dfs(i+1)) return false;
                }
            }
        }
        return true;
    }
     void print(){
        if(!solve())
                puts("no");
        else {

            puts("yes");
        }
    }
};
int main()//mark[i]对应是否取
{
    int n,m,x,y;
    while(scanf("%d%d",&n,&m)!=EOF){
        TwoSAT T;
        T.init(n);
        while(m--){
            scanf("%d%d",&x,&y);
            int flag1,flag2;
            if(x>0) flag1=1;
            else flag1=0;
            if(y>0) flag2=1;
            else flag2=0;
            x=abs(x);y=abs(y);
            x--;y--;
            x*=2;y*=2;
            x+=flag1;y+=flag2;
            T.add_clause(x,y);
        }
        T.print();
    }
    return 0;
}
