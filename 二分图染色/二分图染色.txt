#include<iostream>
#include<queue>
#include<vector>
using namespace std;
const int maxn =210;
vector<int>G[maxn];
int color[maxn];
void init(){
	for(int i=0;i<maxn ;i++){
		G[i].clear();
		color[i]=-1;
	}
}

bool bicolorable(){//染色法
	queue<int>Q;
	color[0]=1;
	Q.push(0);
	while(!Q.empty()){
		int v1 = Q.front();
		Q.pop();
		for(int i=0;i<G[v1].size();i++){
			int v2 =G[v1][i];
			if(color[v2]==-1){ //情况1
				color[v2]=-color[v1];
				Q.push(v2);
			}
			else if(color[v2]==color[v1]){ //情况3
				return false;
			}
				
		}
	}
	return true;
}
int main(){
	int n,m;
	while(cin>>n){
		cin>>m;
		int a,b;
		init();
		for(int i=0;i<m;i++){
			cin>>a>>b;
			G[a].push_back(b);
			G[b].push_back(a);
		}
		if(bicolorable())
			cout<<"BICOLORABLE."<<endl;
		else
			cout<<"NOT BICOLORABLE."<<endl;
	}
	return 0;
}